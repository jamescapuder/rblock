var searchIndex = {};
searchIndex["blockchain"] = {"doc":"","items":[[3,"Block","blockchain","The 'Block' struct.  ",null,null],[12,"num","","The block number.",0,null],[12,"data","","The actual data of the block. Currently can only be a 'String', future work will generalize this to arbitrary data.  ",0,null],[12,"prevHash","","The hash of the previous 'Block' in the 'Chain'. If this is the first block, 'prevHash' is set to 0.",0,null],[3,"Chain","","Putting the 'Chain' in blockchain. ",null,null],[12,"lst","","The only element of this struct, a vecdeque of 'Block's. ",1,null],[11,"hash","","Custom hash method for 'Block'.",0,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new block.",0,{"inputs":[{"name":"i32"},{"name":"string"},{"name":"u64"}],"output":{"name":"block"}}],[11,"get_hash","","Returns the hash of a block.",0,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"new","","Returns a new (empty) blockchain.",1,{"inputs":[],"output":{"name":"chain"}}],[11,"insert_block","","Inserts a new block into the chain given the data for the new block.",1,{"inputs":[{"name":"self"},{"name":"string"}],"output":null}],[11,"validate_chain","","Determines whether a chain is valid.",1,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}]],"paths":[[3,"Block"],[3,"Chain"]]};
initSearch(searchIndex);
